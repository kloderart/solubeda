{"version":3,"sources":["webpack:///./src/components/Header.jsx","webpack:///./src/components/curriculum/Timeline.jsx","webpack:///./src/pages/curriculum.js","webpack:///./src/components/Seo.jsx"],"names":["StyledHeader","styled","h2","Header","children","StyledTimeline","div","StyledIntro","p","StyledItem","Timeline","props","intro","dangerouslySetInnerHTML","__html","node","html","className","items","map","item","idx","key","frontmatter","year","CurriculumPage","data","allMarkdownRemark","edges","filter","title","keywords","query","SEO","description","lang","meta","site","metaDescription","siteMetadata","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps"],"mappings":"oSAGA,IAAMA,E,UAAeC,EAAOC,GAAV,KAYHC,IANA,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACb,kBAACJ,EAAD,KACGI,K,+8BCRL,IAAMC,EAAiBJ,IAAOK,IAAV,KAKdC,EAAcN,IAAOO,EAAV,KAKXC,EAAaR,IAAOK,IAAV,KA4CDI,EAvBE,SAACC,GAChB,OACE,kBAACN,EAAD,KACGM,EAAMC,OACL,kBAACL,EAAD,CACEM,wBAAyB,CAAEC,OAAQH,EAAMC,MAAMG,KAAKC,QAGxD,yBAAKC,UAAW,kBACd,yBAAKA,UAAW,UACfN,EAAMO,OAASP,EAAMO,MAAMC,KAAI,SAACC,EAAMC,GAAP,OAC9B,kBAACZ,EAAD,CAAYa,IAAKD,GACf,yBAAKJ,UAAW,QAASG,EAAKL,KAAKQ,YAAYC,MAC/C,yBAAKP,UAAW,UACdJ,wBAAyB,CAAEC,OAAQM,EAAKL,KAAKC,eChD3D,sCAqBeS,UAdQ,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAClBd,EAAQc,EAAKC,kBAAkBC,MAClCC,QAAO,SAAAT,GAAI,OAAKA,EAAKL,KAAKQ,YAAYC,QAAM,GACzCN,EAAQQ,EAAKC,kBAAkBC,MAClCC,QAAO,SAAAT,GAAI,OAAIA,EAAKL,KAAKQ,YAAYC,QACxC,OACE,oCACE,kBAAC,IAAD,CAAKM,MAAO,aAAcC,SAAU,CAAC,MAAO,QAAS,KAAM,gBAC3D,kBAAC5B,EAAA,EAAD,mBACA,kBAAC,EAAD,CAAUS,MAAOA,EAAOM,MAAOA,MATrC,IAgBac,EAAK,c,mFClBlB,SAASC,EAAT,GAA4D,IAA7CC,EAA4C,EAA5CA,YAAaC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,KAAML,EAAmB,EAAnBA,SAAUD,EAAS,EAATA,MACxCO,EADiD,OACjDA,KAcFC,EAAkBJ,GAAeG,EAAKE,aAAaL,YAEzD,OACE,kBAAC,SAAD,CACEM,eAAgB,CACdL,QAEFL,MAAOA,EACPW,cAAa,QAAUJ,EAAKE,aAAaT,MACzCM,KAAM,CACJ,CACEM,KAAM,cACNC,QAASL,GAEX,CACEM,SAAU,WACVD,QAASb,GAEX,CACEc,SAAU,iBACVD,QAASL,GAEX,CACEM,SAAU,UACVD,QAAS,WAEX,CACED,KAAM,eACNC,QAAS,WAEX,CACED,KAAM,kBACNC,QAASN,EAAKE,aAAaM,QAE7B,CACEH,KAAM,gBACNC,QAASb,GAEX,CACEY,KAAM,sBACNC,QAASL,IAGVQ,OACCf,EAASgB,OAAS,EACd,CACEL,KAAM,WACNC,QAASZ,EAASiB,KAAK,OAEzB,IAELF,OAAOV,KAKhBH,EAAIgB,aAAe,CACjBd,KAAM,KACNC,KAAM,GACNL,SAAU,IAWGE","file":"component---src-pages-curriculum-js-71bad84bef665853b9a2.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledHeader = styled.h2`\n  font-size: 32px;\n  font-weight: 100;\n  margin: 0 16px 16px;\n`;\n\nconst Header = ({ children }) => (\n  <StyledHeader>\n    {children}\n  </StyledHeader>\n);\n\nexport default Header;\n\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst StyledTimeline = styled.div`\n  margin: 0 16px 16px;\n  display: grid;\n`;\n\nconst StyledIntro = styled.p`\n  em { font-style: italic; }\n  p { margin-bottom: 16px; }\n`;\n\nconst StyledItem = styled.div`\n  display: grid;\n  grid-template-columns: 58px auto;\n  margin: 16px 0 16px;\n  .year {\n    word-wrap: break-word;\n    color: grey;\n    font-size: 18px;\n    font-weight: bold;\n\n    @media (max-width: 920px) {\n      margin-bottom: 12px;\n    }\n  }\n\n  @media (max-width: 920px) {\n    grid-template-columns: auto;\n    grid-template-rows: auto auto;\n  }\n`;\n\nconst Timeline = (props) => {\n  return (\n    <StyledTimeline>\n      {props.intro && (\n        <StyledIntro\n          dangerouslySetInnerHTML={{ __html: props.intro.node.html }}\n        />\n      )}\n      <div className={'timeline-items'}>\n        <div className={'ruler'} />\n        {props.items && props.items.map((item, idx) => (\n          <StyledItem key={idx}>\n            <div className={'year'}>{item.node.frontmatter.year}</div>\n            <div className={'content'}\n              dangerouslySetInnerHTML={{ __html: item.node.html}}\n            />\n          </StyledItem>\n        ))}\n      </div>\n    </StyledTimeline>\n  );\n};\n\nexport default Timeline;\n","import React from 'react';\nimport SEO from '../components/Seo';\nimport { graphql } from 'gatsby';\n\nimport Header from '../components/Header';\nimport Timeline from '../components/curriculum/Timeline';\n\nconst CurriculumPage = ({ data }) => {\n  const intro = data.allMarkdownRemark.edges\n    .filter(item => !item.node.frontmatter.year)[0];\n  const items = data.allMarkdownRemark.edges\n    .filter(item => item.node.frontmatter.year);\n  return (\n    <>\n      <SEO title={'Curriculum'} keywords={['sol', 'ubeda', 'cv', 'curriculum']} />\n      <Header>Curriculum</Header>\n      <Timeline intro={intro} items={items} />\n    </>\n  );\n};\n\nexport default CurriculumPage;\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(\n      filter: { frontmatter: { type: { eq: \"curriculum\" } } }\n      sort: {\n        fields: [frontmatter___year]\n        order: DESC\n      }\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            type\n            year\n          }\n          rawMarkdownBody\n          html\n        }\n      }\n    }\n  }\n`;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet-async';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: 'description',\n          content: metaDescription,\n        },\n        {\n          property: 'og:title',\n          content: title,\n        },\n        {\n          property: 'og:description',\n          content: metaDescription,\n        },\n        {\n          property: 'og:type',\n          content: 'website',\n        },\n        {\n          name: 'twitter:card',\n          content: 'summary',\n        },\n        {\n          name: 'twitter:creator',\n          content: site.siteMetadata.author,\n        },\n        {\n          name: 'twitter:title',\n          content: title,\n        },\n        {\n          name: 'twitter:description',\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: 'keywords',\n                content: keywords.join(', '),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: 'en',\n  meta: [],\n  keywords: [],\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n"],"sourceRoot":""}