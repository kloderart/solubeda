{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./src/components/Seo.jsx"],"names":["StyledPage","styled","div","NotFoundPage","title","className","SEO","description","lang","meta","keywords","site","useStaticQuery","metaDescription","siteMetadata","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps"],"mappings":"+aAKA,IAAMA,EAAaC,IAAOC,IAAV,KA4BDC,UAZM,kBACnB,qCACE,cAAC,IAAD,CAAKC,MAAM,mBACX,cAACJ,EAAD,UACE,sBAAKK,UAAW,UAAhB,UACE,8DACA,uG,sFCtBR,SAASC,EAAT,GAA4D,IAA7CC,EAA4C,EAA5CA,YAAaC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,SAAUN,EAAS,EAATA,MACxCO,EAASC,yBAAe,YAAxBD,KAcFE,EAAkBN,GAAeI,EAAKG,aAAaP,YAEzD,OACE,cAAC,SAAD,CACEQ,eAAgB,CACdP,QAEFJ,MAAOA,EACPY,cAAa,QAAUL,EAAKG,aAAaV,MACzCK,KAAM,CACJ,CACEQ,KAAM,cACNC,QAASL,GAEX,CACEM,SAAU,WACVD,QAASd,GAEX,CACEe,SAAU,iBACVD,QAASL,GAEX,CACEM,SAAU,UACVD,QAAS,WAEX,CACED,KAAM,eACNC,QAAS,WAEX,CACED,KAAM,kBACNC,QAASP,EAAKG,aAAaM,QAE7B,CACEH,KAAM,gBACNC,QAASd,GAEX,CACEa,KAAM,sBACNC,QAASL,IAGVQ,OACCX,EAASY,OAAS,EACd,CACEL,KAAM,WACNC,QAASR,EAASa,KAAK,OAEzB,IAELF,OAAOZ,KAKhBH,EAAIkB,aAAe,CACjBhB,KAAM,KACNC,KAAM,GACNC,SAAU,IAWGJ","file":"component---src-pages-404-js-e7b0f5cbcc9b1f48b33d.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nimport SEO from '../components/Seo';\n\nconst StyledPage = styled.div`\n  display: grid;\n  text-align: center;\n  \n  width: 100%;\n  height: 100%;\n  \n  div.content {\n    padding: 60px 18px;\n    h1 {\n      font-size: 32px;\n      margin-bottom: 32px;\n    }\n  }\n`;\n\nconst NotFoundPage = () => (\n  <>\n    <SEO title=\"404: Not found\" />\n    <StyledPage>\n      <div className={'content'}>\n        <h1>404, página no encontrada...</h1>\n        <p>Lo sentimos, no hemos podido encontrar la página que buscas.</p>\n      </div>\n    </StyledPage>\n  </>\n);\n\nexport default NotFoundPage;\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Helmet } from 'react-helmet-async';\nimport { useStaticQuery, graphql } from 'gatsby';\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: 'description',\n          content: metaDescription,\n        },\n        {\n          property: 'og:title',\n          content: title,\n        },\n        {\n          property: 'og:description',\n          content: metaDescription,\n        },\n        {\n          property: 'og:type',\n          content: 'website',\n        },\n        {\n          name: 'twitter:card',\n          content: 'summary',\n        },\n        {\n          name: 'twitter:creator',\n          content: site.siteMetadata.author,\n        },\n        {\n          name: 'twitter:title',\n          content: title,\n        },\n        {\n          name: 'twitter:description',\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: 'keywords',\n                content: keywords.join(', '),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  );\n}\n\nSEO.defaultProps = {\n  lang: 'en',\n  meta: [],\n  keywords: [],\n};\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n};\n\nexport default SEO;\n"],"sourceRoot":""}